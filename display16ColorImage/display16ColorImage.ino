/* This progam displays an image on a Peggy2.
   It was automatically generated by BMP2PEG.

   Copyright (c) 2009 Mark Delp.  All right reserved.

   This program is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   This software is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with this software; if not, see http://www.gnu.org/licenses.
*/

#include <Peggy2.h>

// declare bitmap data
uint32_t einstein[4][25] = {
{0x00164BC0, 0x000F5F48, 0x00288AE2, 0x0020FD14, 0x0045366C, 0x01619B68, 0x00159994, 0x005C1676, 0x00016AFA, 0x00C84984, 0x00159EE2, 0x0133CEBE, 0x001FE4B4, 0x00FB8BD2, 0x0191536C, 0x008F0A41, 0x015C3302, 0x0098819E, 0x00B2A528, 0x016C9578, 0x00AFFEB4, 0x0049FE50, 0x0000D6C0, 0x007E2120, 0x001D5080},
{0x000B32C0, 0x00148960, 0x001F4960, 0x000F6530, 0x000F1C88, 0x001FE1C4, 0x005BE330, 0x0043E158, 0x00338954, 0x00739150, 0x00CEC16C, 0x00F339B8, 0x005147FC, 0x001AFA1C, 0x00926CA0, 0x00B07634, 0x00C8AFCC, 0x002DFD68, 0x0184A200, 0x01F79F80, 0x015DE080, 0x002C0400, 0x0039B980, 0x00046000, 0x00040000},
{0x0006FC80, 0x000BF640, 0x0017F670, 0x000F8238, 0x003EE0E8, 0x003FFDA4, 0x003FFDF4, 0x003FFDB0, 0x007FF5B0, 0x003FEDB4, 0x003B3C88, 0x000C204C, 0x008C3844, 0x008CFDD4, 0x00273FE4, 0x0026FFF4, 0x0063BBFC, 0x000317C0, 0x000F5FC0, 0x00765840, 0x000F4080, 0x00179980, 0x0002E100, 0x00018000, 0x00020000},
{0x0001FF00, 0x0007FF80, 0x000FFF80, 0x001FFFC0, 0x001FFF10, 0x001FFE18, 0x003FFE08, 0x003FFE0C, 0x003FFE0C, 0x007FFE08, 0x007FF810, 0x007E1000, 0x007E1008, 0x00773028, 0x007FF018, 0x007FF008, 0x003FF000, 0x007FE000, 0x007FE000, 0x000FE000, 0x00060040, 0x000660C0, 0x00040000, 0x00008000, 0x00000000}
};

// declare frame buffers
Peggy2 frame1;
Peggy2 frame2;
Peggy2 frame3;
Peggy2 frame4;

void setup()  // run once, when the sketch starts
{
 // Call this once to init the hardware.
 // (Only needed once, even if you've got lots of frames.)
 frame1.HardwareInit();

 // populate each row of each frame buffer from the bitmap data
 int row;
 for (row = 0; row < 25; row++)
 {
  frame1.WriteRow(row, einstein[0][row]);
  frame2.WriteRow(row, einstein[1][row]);
  frame3.WriteRow(row, einstein[2][row]);
  frame4.WriteRow(row, einstein[3][row]);
 }

}

void loop() // run over and over again
{
  frame1.RefreshAll(1);  // draw frame buffer 1 time
  frame2.RefreshAll(2);  // draw frame buffer 2 times
  frame3.RefreshAll(4);  // draw frame buffer 4 times
  frame4.RefreshAll(8);  // draw frame buffer 8 times
}
